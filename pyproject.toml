# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[project]
name = "emerging-optimizers"
dynamic = [
    "version",
    "readme",
]
description = "A research project for emerging optimizers other than AdamW"
license = {file = "LICENSE"}
requires-python = ">=3.10"
authors = [{ name = "NVIDIA", email = "nemo-toolkit@nvidia.com" }]
maintainers = [{ name = "NVIDIA", email = "nemo-toolkit@nvidia.com" }]
keywords = [
    "NLP",
    "NeMo",
    "deep",
    "gpu",
    "language",
    "learning",
    "machine",
    "nvidia",
    "pytorch",
    "torch",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
]
dependencies = [
    "torch",
    "absl-py",
    "typing-extensions",
]

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[dependency-groups]
docs = [
    "myst-parser>=4.0.1",
    "nvidia-sphinx-theme>=0.0.8",
    "sphinx>=8.1.3",
    "sphinx-autobuild>=2024.10.3",
    "sphinx-autodoc2>=0.5.0",
    "sphinx-copybutton>=0.5.2",
    "sphinx-panels>=0.4.1",
    "sphinxcontrib-katex>=0.9.11",
]
test = [
    "coverage>=7.8.1",
    "flake8>=7.2.0",
    "pylint>=3.3.7",
]
dev = [
    "pre-commit>=3.6.0",
    "ruff>=0.9.9",
    "mypy>=1.8.0",
    "triton>=3.4.0",
]

[tool.uv]
managed = true

[tool.setuptools.packages.find]
include = ["emerging_optimizers", "emerging_optimizers.*"]

[tool.setuptools.dynamic]
version = {attr = "emerging_optimizers.__version__"}
readme = {file = "README.md", content-type = "text/markdown"}

[project.urls]
Download = "https://github.com/NVIDIA-NeMo/Emerging-Optimizers/releases"
Homepage = "https://github.com/NVIDIA-NeMo/Emerging-Optimizers"


[tool.ruff]
# Match black's line length
line-length = 119
target-version = "py310"

# Exclude common directories that shouldn't be linted
exclude = [
    ".git",
    ".github",
    ".venv",
    "venv",
    "__pycache__",
    "*.egg",
    "build",
    "dist",
    "docs/source/conf.py",
    "setup.py",
]

# Files to completely ignore
extend-exclude = [
    "*.ipynb",
]

[tool.ruff.lint]
# Configure imports sorting to match isort
select = [
    "F541",  # f-string without any placeholders
    "F841",  # local variable assigned but never used
    "F401",  # imported but unused
    "E741",  # ambiguous variable name
    "F821",  # undefined name
    "E266",  # too many leading '#' for block comment
    "I",     # isort
    "D101",  # docstring
    "D103",
]

# Additional rules can be added here
ignore = [
    "E501",  # Line too long - handled by formatter
]
[tool.ruff.lint.isort]
known-first-party = ["emerging_optimizers"]
known-third-party = ["examples", "scripts"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
lines-after-imports = 2

[tool.ruff.lint.per-file-ignores]
# Ignore import violations in __init__ files
"__init__.py" = ["F401", "F403"]
# Ignore docstring requirements in test files
"test_*.py" = ["D101", "D103"]
"*_test.py" = ["D101", "D103"]
"tests/*.py" = ["D101", "D103"]

[tool.ruff.format]
# Match black configuration
quote-style = "double"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.run]
concurrency = ["thread", "multiprocessing"]
omit = ["/tmp/*"]
relative_files = true
source = ["emerging_optimizers"]


[tool.coverage.paths]
source = ["emerging_optimizers/", "/workspace/emerging_optimizers"]
